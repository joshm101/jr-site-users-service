# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
commands:
  setup:
    description: "Checkout repo & install dependencies"
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
jobs:
  test:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - setup
      # run tests!
      - run: npm test
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - setup
      - run:
          name: Build & push Docker image
          command: |
            docker build -f ./docker/dev/Dockerfile -t jshm101/jr-site-users:dev .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push jshm101/jr-site-users:dev
  deploy:
    docker:
      - image: circleci/node:10.16
    working_directory: ~/
    steps:
      - run:
          name: SSH & run deploy script
          command: |
            ssh -o StrictHostKeyChecking=no root@174.138.117.84 "./deploy-app.sh"
workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy:
          requires:
            - build
